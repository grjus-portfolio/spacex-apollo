{"version":3,"sources":["logo.svg","components/LaunchItem.jsx","components/MissionKey.jsx","components/Lauches.jsx","components/Launch.jsx","App.js","reportWebVitals.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","MissionKey","LAUNCHES_QUERY","gql","Lauches","query","loading","error","data","console","log","launches","map","Component","LAUNCH_QUERY","Launch","this","props","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","exact","path","component","Launches","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAAe,G,YAAA,IAA0B,kC,wHCK1B,SAASA,EAAT,GAAqG,IAAD,IAA9EC,OAAUC,EAAoE,EAApEA,cAAeC,EAAqD,EAArDA,aAAcC,EAAuC,EAAvCA,kBAAmBC,EAAoB,EAApBA,eAC9F,OACC,qBAAKC,UAAU,sBAAf,SACC,sBAAKA,UAAU,MAAf,UACC,sBAAKA,UAAU,WAAf,UACC,2CAAa,sBAAMA,UAAWC,IAAW,CACxC,eAAgBF,EAChB,eAAgBA,IAFJ,SAGRF,OAJN,SAKO,cAAC,IAAD,CAAQK,OAAO,mBAAf,SAAmCJ,OAG1C,qBAAKE,UAAU,WAAf,SACC,cAAC,IAAD,CAAMG,GAAE,kBAAaP,GAAiBI,UAAU,oBAAhD,mCCHUI,I,IAAAA,EAbf,WACC,OACC,sBAAKJ,UAAU,OAAf,UACC,8BACC,sBAAMA,UAAU,yBADjB,gBAGA,8BACC,sBAAMA,UAAU,wBADjB,iBCDGK,EAAiBC,YAAH,uJAWCC,E,4JACpB,WACC,OACC,qCACC,oBAAIP,UAAU,iBAAd,sBACA,cAAC,EAAD,IACA,cAAC,IAAD,CAAOQ,MAAOH,EAAd,SAEE,YAA+B,IAA5BI,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAClB,OAAIF,EAAgB,4CAChBC,EAAcE,QAAQC,IAAIH,IAC9BE,QAAQC,IAAIF,GAEX,mCAEEA,EAAKG,SAASC,KAAI,SAAApB,GAAM,OACvB,cAACD,EAAD,CAAuCC,OAAQA,GAA9BA,EAAOC,+B,GAhBEoB,aCZ/BC,EAAeX,YAAH,wSAyEHY,EAvDf,4JACC,WACC,IAAMtB,EAAkBuB,KAAKC,MAAMC,MAAMC,OAAnC1B,cAEN,OADAA,EAAgB2B,SAAS3B,GAExB,mCACC,cAAC,IAAD,CAAOY,MAAOS,EAAcO,UAAW,CAAE5B,iBAAzC,SAEE,YAA+B,IAA5Ba,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAClB,GAAIF,EAAS,OAAO,yCACpB,GAAIC,EAAO,OAAOE,QAAQC,IAAIH,GAC9B,MAMKC,EAAKhB,OALPE,EADH,EACGA,aACDD,EAFF,EAEEA,cACA6B,EAHF,EAGEA,YACA1B,EAJF,EAIEA,eAJF,IAKE2B,OAAUC,EALZ,EAKYA,UAAWC,EALvB,EAKuBA,YAAaC,EALpC,EAKoCA,YAGpC,OAAO,gCACN,oBAAI7B,UAAU,iBAAd,SAA+B,uBAAMA,UAAU,YAAhB,qBAAqCH,OACpE,oBAAIG,UAAU,OAAd,4BACA,qBAAIA,UAAU,aAAd,UACC,qBAAIA,UAAU,kBAAd,4BACiBJ,KAEjB,qBAAII,UAAU,kBAAd,0BACeyB,KAEf,qBAAIzB,UAAU,kBAAd,gCACoB,sBAAMA,UAAWC,IAAW,CAC9C,eAAgBF,EAChB,eAAgBA,IAFE,SAGdA,EAAiB,MAAQ,aAGhC,oBAAIC,UAAU,OAAd,4BACA,qBAAIA,UAAU,aAAd,UACC,qBAAIA,UAAU,kBAAd,wBAA4C2B,KAC5C,qBAAI3B,UAAU,kBAAd,0BAA8C4B,KAC9C,qBAAI5B,UAAU,kBAAd,0BAA8C6B,QAE/C,uBACA,cAAC,IAAD,CAAM1B,GAAG,GAAGH,UAAU,oBAAtB,8BA3CR,GAA4BgB,a,OChBtBc,EAAS,IAAIC,IAAa,CAC9BC,IAAK,aAkBQC,MAff,WACE,OACE,cAAC,IAAD,CAAgBH,OAAQA,EAAxB,SACE,cAAC,IAAD,UACE,sBAAK9B,UAAU,YAAf,UACE,qBAAKkC,IAAKC,EAAMC,IAAI,SAASC,MAAO,CAAEC,MAAO,IAAKC,QAAS,QAASC,OAAQ,UAC5E,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,yBAAyBC,UAAWzB,YCPjD2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4181b152.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.10aced87.svg\";","import React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nexport default function LaunchItem({ launch: { flight_number, mission_name, launch_date_local, launch_success } }) {\n\treturn (\n\t\t<div className=\"card card-body mb-3\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-9\">\n\t\t\t\t\t<h4>Mission: <span className={classNames({\n\t\t\t\t\t\t'text-success': launch_success,\n\t\t\t\t\t\t'text-danger': !launch_success\n\t\t\t\t\t})}>{mission_name}</span></h4>\n\t\t\t\t\tDate: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment>\n\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-md-3\">\n\t\t\t\t\t<Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">Launch details</Link>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\n\nfunction MissionKey() {\n\treturn (\n\t\t<div className=\"my-3\">\n\t\t\t<p>\n\t\t\t\t<span className=\"px-3 mr-2 bg-success\" /> = Success\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<span className=\"px-3 mr-2 bg-danger\" /> = Fail\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n\nexport default MissionKey;\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport LaunchItem from './LaunchItem';\nimport MissionKey from './MissionKey';\n\n\nconst LAUNCHES_QUERY = gql`\nquery LauchesQuery{\n\tlaunches {\n\t\tflight_number\n\t\tmission_name\n\t\tlaunch_date_local\n\t\tlaunch_success\n\t}\n}\n`;\n\nexport default class Lauches extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h1 className=\"display-4 my-3\">Launches</h1>\n\t\t\t\t<MissionKey />\n\t\t\t\t<Query query={LAUNCHES_QUERY}>\n\t\t\t\t\t{\n\t\t\t\t\t\t({ loading, error, data }) => {\n\t\t\t\t\t\t\tif (loading) return <h4>Loading...</h4>;\n\t\t\t\t\t\t\tif (error) return console.log(error);\n\t\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdata.launches.map(launch => (\n\t\t\t\t\t\t\t\t\t\t\t<LaunchItem key={launch.flight_number} launch={launch} />\n\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t</Query>\n\t\t\t</>\n\t\t);\n\t}\n}\n\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst LAUNCH_QUERY = gql`\nquery LaunchQuery($flight_number: Int!) {\n\tlaunch(flight_number:$flight_number) {\n\t\tflight_number\n\t\tmission_name\n\t\tlaunch_year\n\t\tlaunch_success\n\t\tlaunch_date_local\n\t\trocket {\n\t\t\trocket_id\n\t\t\trocket_name\n\t\t\trocket_type\n\t\t}\n\t}\n\n}\n`;\n\nexport class Launch extends Component {\n\trender() {\n\t\tlet { flight_number } = this.props.match.params;\n\t\tflight_number = parseInt(flight_number);\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n\t\t\t\t\t{\n\t\t\t\t\t\t({ loading, error, data }) => {\n\t\t\t\t\t\t\tif (loading) return <h4>Loading</h4>;\n\t\t\t\t\t\t\tif (error) return console.log(error);\n\t\t\t\t\t\t\tconst\n\t\t\t\t\t\t\t\t{ mission_name,\n\t\t\t\t\t\t\t\t\tflight_number,\n\t\t\t\t\t\t\t\t\tlaunch_year,\n\t\t\t\t\t\t\t\t\tlaunch_success,\n\t\t\t\t\t\t\t\t\trocket: { rocket_id, rocket_name, rocket_type }\n\t\t\t\t\t\t\t\t} = data.launch;\n\n\t\t\t\t\t\t\treturn <div>\n\t\t\t\t\t\t\t\t<h1 className=\"display-4 my-3\"><span className=\"text-dark\">Mission:{mission_name}</span></h1>\n\t\t\t\t\t\t\t\t<h4 className=\"mb-3\">Launch details</h4>\n\t\t\t\t\t\t\t\t<ul className=\"list-group\">\n\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">\n\t\t\t\t\t\t\t\t\t\tFlight number: {flight_number}\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">\n\t\t\t\t\t\t\t\t\t\tLaunch year: {launch_year}\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">\n\t\t\t\t\t\t\t\t\t\tLaunch Sucessfull: <span className={classNames({\n\t\t\t\t\t\t\t\t\t\t\t'text-success': launch_success,\n\t\t\t\t\t\t\t\t\t\t\t'text-danger': !launch_success\n\t\t\t\t\t\t\t\t\t\t})}>{launch_success ? 'Yes' : 'No'}</span>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t<h4 className=\"my-3\">Rocket details</h4>\n\t\t\t\t\t\t\t\t<ul className=\"list-group\">\n\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\n\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\n\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t\t<Link to=\"\" className=\"btn btn-secondary\">Back</Link>\n\t\t\t\t\t\t\t</div>;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t</Query>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Launch;\n","import './App.css';\nimport logo from \"./logo.svg\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Launches from \"./components/Lauches\";\nimport Launch from \"./components/Launch\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n          <img src={logo} alt=\"spaceX\" style={{ width: 300, display: 'block', margin: 'auto' }} />\n          <Route exact path=\"/\" component={Launches} />\n          <Route exact path=\"/launch/:flight_number\" component={Launch} />\n\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootswatch/dist/cyborg/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}