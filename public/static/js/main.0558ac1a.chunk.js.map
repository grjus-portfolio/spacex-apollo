{"version":3,"sources":["logo.svg","components/LaunchItem.jsx","components/Search.jsx","components/LoadingScreen.jsx","components/Lauches.jsx","components/RocketItem.jsx","components/Rockets.jsx","components/Launch.jsx","components/Navbar.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["LaunchItem","launch","id","name","dateLocal","date_local","success","details","className","format","classNames","to","Search","handleSearch","search","onChange","value","type","placeholder","MODAL_STYLE","position","top","left","marginTop","marginLeft","zIndex","fontSize","OVERLAY","bottom","right","background","LoadingScreen","ReactDom","createPortal","style","marginRight","role","document","getElementById","LAUNCHES_QUERY","gql","Lunches","useState","setSearch","useLazyQuery","fetchData","loading","data","error","useLayoutEffect","timer","setTimeout","variables","miss_name","clearTimeout","e","target","console","log","launches","map","RocketItem","rocket","description","images","flickr_images","missions","accordion","useRef","length","src","alt","width","onClick","current","classList","toggle","ref","mission","ROCKETS_QUERY","Rockets","useQuery","rockets","LAUNCH_QUERY","Launch","props","match","params","links","patch","small","display","margin","item","Navbar","client","ApolloClient","uri","App","logo","exact","path","component","Launches","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0558ac1a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.10aced87.svg\";","import React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function LaunchItem({\n  launch: {\n    id, name, date_local: dateLocal, success, details,\n  },\n}) {\n  return (\n    <div className=\"card card-body mb-3\">\n      <div className=\"row\">\n        <div className=\"col-md-9\">\n          <h5>\n            Mission:\n            {' '}\n            <span className=\"text-primary\">{name}</span>\n          </h5>\n          Date:\n          {' '}\n          <Moment format=\"YYYY-MM-DD HH:mm\">{dateLocal}</Moment>\n          <p>\n            Launch:\n            <span\n              className={classNames({\n                'text-success': success,\n                'text-danger': !success,\n              })}\n            >\n              {success ? 'Sucess' : 'Failed'}\n            </span>\n          </p>\n        </div>\n\n        <div className=\"col-md-3\">\n          <Link to={`/launch/${id}`} className=\"btn btn-secondary\">\n            Launch details\n          </Link>\n        </div>\n        <div className=\"col-md-9 my-2\">\n          <span className=\"text-secondary\">{details}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nLaunchItem.propTypes = {\n  launch: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    date_local: PropTypes.string.isRequired,\n    success: PropTypes.bool.isRequired,\n    details: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Search({ handleSearch, search }) {\n  return (\n    <form className=\"d-flex\">\n      <input\n        onChange={handleSearch}\n        value={search}\n        className=\"form-control me-sm-2 my-4\"\n        type=\"text\"\n        placeholder=\"Search mission\"\n      />\n    </form>\n  );\n}\n\nexport default Search;\n\nSearch.propTypes = {\n  handleSearch: PropTypes.func.isRequired,\n  search: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport ReactDom from 'react-dom';\n\nconst MODAL_STYLE = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  marginTop: '-50px',\n  marginLeft: '-100px',\n  zIndex: 1000,\n  fontSize: '24px',\n};\n\nconst OVERLAY = {\n  position: 'fixed',\n  top: '30%',\n  bottom: '30%',\n  left: '0%',\n  right: '0%',\n  background: 'rgba(0, 0, 0, 0.5)',\n  zIndex: 1000,\n};\n\nfunction LoadingScreen() {\n  return ReactDom.createPortal(\n    <div style={OVERLAY}>\n      <div style={MODAL_STYLE}>\n        <div className=\"d-inline-flex p-4\">\n          <div style={{ marginRight: '10px' }}>Fetching data</div>\n          <div className=\"spinner-border\" role=\"status\" />\n        </div>\n      </div>\n    </div>,\n    document.getElementById('portal'),\n  );\n}\n\nexport default LoadingScreen;\n","import { useLazyQuery } from 'react-apollo';\nimport React, { useState, useLayoutEffect } from 'react';\nimport { gql } from 'apollo-boost';\nimport LaunchItem from './LaunchItem';\nimport Search from './Search';\nimport LoadingScreen from './LoadingScreen';\n\nconst LAUNCHES_QUERY = gql`\n  query LauchesQuery($miss_name: String) {\n    launches(miss_name: $miss_name) {\n      id\n      name\n      date_local\n      success\n      details\n    }\n  }\n`;\n\nexport default function Lunches() {\n  const [search, setSearch] = useState('');\n  const [fetchData, { loading, data, error }] = useLazyQuery(LAUNCHES_QUERY);\n\n  useLayoutEffect(() => {\n    const timer = setTimeout(() => {\n      fetchData({\n        variables: {\n          miss_name: search,\n        },\n      });\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [search]);\n\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  if (loading) {\n    return (\n      <>\n        <LoadingScreen />\n        <Search handleSearch={handleSearch} search={search} />\n      </>\n    );\n  }\n  if (error) return console.log(error);\n\n  return (\n    <>\n      <Search handleSearch={handleSearch} search={search} />\n      {data?.launches?.map((launch) => (\n        <LaunchItem key={launch.id} launch={launch} details={launch.details} />\n      ))}\n    </>\n  );\n}\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default function RocketItem({\n  rocket: {\n    // id,\n    name,\n    description,\n    flickr_images: images,\n  },\n  missions,\n\n}) {\n  const accordion = useRef(null);\n\n  const handleAccordion = () => {\n    accordion.current.classList.toggle('show');\n  };\n  // test comment\n  return (\n    <div className=\"card card-body mb-3\">\n      <div className=\"row\">\n        <div className=\"col-lg-8\">\n          <h4>\n            <span className=\"text-primary\">{name}</span>\n          </h4>\n          <p className=\"text-secondary\">{description}</p>\n          <p className=\"text-primary\">\n            Number of missions:\n            {' '}\n            <span className=\"text-secondary\">{missions.length}</span>\n          </p>\n        </div>\n        <div className=\"col-lg-4\">\n          <img src={images[0]} alt={`rocket-${name}`} style={{ width: '80%' }} />\n        </div>\n        <hr />\n        <div className=\"accordion\" id=\"accordionExample\">\n          <div className=\"accordion-item\">\n            <h2 className=\"accordion-header\" id=\"headingOne\">\n              <button className=\"accordion-button\" type=\"button\" onClick={handleAccordion} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                Missions\n              </button>\n            </h2>\n            <div aria-hidden=\"true\" ref={accordion} className=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n              <div className=\"accordion-body\">\n                {missions.map((mission) => <div><Link to={`/launch/${mission.id}`} key={mission.id} className=\"link-primary\">{mission.name}</Link></div>)}\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nRocketItem.propTypes = {\n  rocket: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    flickr_images: PropTypes.arrayOf(PropTypes.string).isRequired,\n    description: PropTypes.string.isRequired,\n  }).isRequired,\n  missions: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired).isRequired,\n};\n","import { useQuery } from 'react-apollo';\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport RocketItem from './RocketItem';\nimport LoadingScreen from './LoadingScreen';\n\nconst ROCKETS_QUERY = gql`\n  query RocketsQuery {\n    rockets {\n      id\n      name\n      description\n      flickr_images\n      missions {\n          id,\n          name\n      }\n    }\n  }\n`;\n\nexport default function Rockets() {\n  const { loading, data, error } = useQuery(ROCKETS_QUERY);\n\n  if (loading) {\n    return (\n      <>\n        <LoadingScreen />\n      </>\n    );\n  }\n  if (error) return console.log(error);\n  return (\n    <>\n      {data?.rockets.map((rocket) => (\n        <RocketItem\n          key={rocket.id}\n          rocket={rocket}\n          missions={rocket.missions}\n        />\n      ))}\n    </>\n  );\n}\n","import { gql } from 'apollo-boost';\nimport Moment from 'react-moment';\nimport { useQuery } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport LoadingScreen from './LoadingScreen';\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($id: String!) {\n    launch(id: $id) {\n      id\n      name\n      success\n      date_local\n      details\n      links {\n        patch {\n          small\n        }\n      }\n      rocket {\n        id\n        name\n        description\n        flickr_images\n        description\n      }\n    }\n  }\n`;\n\nexport default function Launch(props) {\n  const { data, error, loading } = useQuery(LAUNCH_QUERY, {\n    variables: {\n      // eslint-disable-next-line react/destructuring-assignment\n      id: props.match.params.id,\n    },\n  });\n  if (loading) return <LoadingScreen />;\n  if (error) return console.log(error);\n  const {\n    // eslint-disable-next-line camelcase\n    name, id, date_local: dateLocal, success, links, rocket,\n  } = data.launch;\n  return (\n    <div>\n      <h1 className=\"display-4 my-3\">\n        <span className=\"text-dark\">\n          Mission:\n          {name}\n        </span>\n      </h1>\n      <div className=\"d-flex justify-content-start\">\n        <div className=\"p-2\">\n          <h4 className=\"mb-3\">Launch details</h4>\n        </div>\n        <div className=\"p-2\">\n          <img\n            src={links.patch.small}\n            alt=\"patch mark\"\n            style={{ width: 40, display: 'block', margin: 'auto' }}\n          />\n        </div>\n      </div>\n      <ul className=\"list-group\">\n        <li className=\"list-group-item\">\n          Flight number:\n          {' '}\n          {id}\n        </li>\n        <li className=\"list-group-item\">\n          Launch Sucessfull:\n          {' '}\n          <span\n            className={classNames({\n              'text-success': success,\n              'text-danger': !success,\n            })}\n          >\n            {success ? 'Yes' : 'No'}\n          </span>\n        </li>\n        <li className=\"list-group-item\">\n          Date:\n          {' '}\n          <Moment format=\"YYYY-MM-DD\">{dateLocal}</Moment>\n        </li>\n      </ul>\n      <h4 className=\"my-3\">Rocket details</h4>\n      <ul className=\"list-group\">\n        <li className=\"list-group-item\">\n          Rocket ID:\n          {' '}\n          {rocket.id}\n        </li>\n        <li className=\"list-group-item\">\n          Rocket Name:\n          {' '}\n          {rocket.name}\n        </li>\n        <li className=\"list-group-item\">\n          Description:\n          {' '}\n          {rocket.description}\n        </li>\n      </ul>\n      <div className=\"container my-4\">\n        <div className=\"row\">\n          {rocket.flickr_images.map((item) => (\n            <div key={item} className=\"col-md-4 my-2\">\n              <img\n                src={item}\n                alt=\"rocket\"\n                style={{ width: '100%', display: 'block', margin: 'auto' }}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n      <hr />\n\n      <Link to=\"/launches\" className=\"btn btn-secondary\">\n        Back\n      </Link>\n    </div>\n  );\n}\n\nLaunch.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Navbar() {\n  return (\n    <ul className=\"nav justify-content-center\">\n      <li className=\"nav-item\">\n        <Link to=\"/launches\" className=\"nav-link active\">\n          Launches\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link to=\"/rockets\" className=\"nav-link active\">\n          Rockets\n        </Link>\n      </li>\n    </ul>\n  );\n}\n\nexport default Navbar;\n","import { ApolloProvider } from 'react-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport React from 'react';\nimport './App.css';\nimport logo from './logo.svg';\nimport Launches from './components/Lauches';\nimport Rockets from './components/Rockets';\nimport Launch from './components/Launch';\nimport Navbar from './components/Navbar';\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <img\n        src={logo}\n        alt=\"spaceX\"\n        style={{ width: 300, display: 'block', margin: 'auto' }}\n      />\n      <Router>\n        <Navbar />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/launches\" component={Launches} />\n            <Route exact path=\"/rockets\" component={Rockets} />\n            <Route exact path=\"/launch/:id\" component={Launch} />\n          </Switch>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootswatch/dist/cyborg/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}